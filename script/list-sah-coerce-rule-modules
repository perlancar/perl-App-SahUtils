#!perl

# DATE
# VERSION

#use 5.010001;
use strict;
use warnings;

use Perinci::CmdLine::Any;
use Perinci::Sub::Gen::AccessTable qw(gen_read_table_func);
use PERLANCAR::Module::List;

my $res = gen_read_table_func(
    name => 'app',
    summary => 'List Sah coerce rule modules',
    table_data => sub {
        my $mods = PERLANCAR::Module::List::list_modules(
            'Data::Sah::Coerce::', {list_modules=>1, recurse=>1});

        my @rows;
        for my $mod (sort keys %$mods) {
            $mod =~ /\AData::Sah::Coerce::(?=[a-z])(.+)/ or next;
            my $row = {rule=>$1};
            (my $mod_pm = "$mod.pm") =~ s!::!/!g;
            require $mod_pm;
            my $meta = $mod->meta;
            $row->{v} = $meta->{v};
            $row->{prio} = $meta->{prio};
            $row->{enable_by_default} = $meta->{enable_by_default};
            push @rows, $row;
        }
        return {data=>\@rows};
    },
    table_spec => {
        fields => {
            rule => {
                schema => 'str*',
                pos => 0,
                sortable => 1,
            },
            v => {
                schema => 'str*',
                pos => 1,
                sortable => 1,
            },
            prio => {
                schema => 'int*',
                pos => 2,
                sortable => 1,
            },
            might_fail => {
                schema => 'bool*',
                pos => 3,
                sortable => 1,
            },
        },
        pk => 'rule',
    },
);
die "Can't generate function: $res->[0] - $res->[1]" unless $res->[0] == 200;

Perinci::CmdLine::Any->new(url => '/main/app')->run;

# ABSTRACT:
# PODNAME:

=head1 SEE ALSO

<show-sah-coerce-module>
