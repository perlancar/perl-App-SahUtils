#!perl

use strict;

use Data::Dump::Color;

# AUTHORITY
# DATE
# DIST
# VERSION

@ARGV == 1 or die "Usage: $0 <sah-schema-in-perl-code>\n";
if ($ARGV[0] =~ /\A\w+(::\w+)*\*?\z/) {
    $sch = $ARGV[0];
} else {
    eval "\$sch = $ARGV[0]";
    die if $@;
}

require Data::Sah::Normalize;
my $nsch = Data::Sah::Normalize::normalize_schema($sch);
dd $nsch;

# ABSTRACT: Normalize Sah schema
# PODNAME:

=head1 SYNOPSIS

 % normalize-sah-schema '"int"'
 ["int", {}, {}]

 % normalize-sah-schema '["int", min=>1]'
 ["int", { min => 1 }, {}]


=head1 DESCRIPTION

This script can be used to quickly produce/see the normalized form of a L<Sah>
schema. Both input and output are in the form of Perl code.


=head1 SEE ALSO

L<validate-with-sah> can also show normalized schema using the C<--show-schema>
option.
